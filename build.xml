<project name="mastodon" default="build" basedir=".">
    <description>
        Build file for mastodon release versions 0.3.
        $Id: build_mastodon.xml,v 0.3 2012/07/26 12:06:17 justs Exp $
    </description>
    <!-- set global properties for this build -->
    <property name="src" location="src"/>
    <property name="build" location="build"/>
    <property name="lib" location="lib"/>
    <property name="dist" location="dist"/>
	
	

    <path id="classpath">
		<fileset dir="${lib}" includes="**/*.jar"/>
	</path>

    <property environment="env"/>

    <target name="init">
        <!-- Create the time stamp -->
        <echo message="${ant.project.name}: ${ant.file}" />
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
        <mkdir dir="${dist}"/>
    </target>

    <target name="compile" depends="init">
        <!-- Compile the java code from ${src} into ${build} -->
        <javac source="1.6" srcdir="${src}" destdir="${build}" classpathref="classpath">
        	<!-- <compilerarg value="-Xlint:unchecked"/> -->
            <include name="figtree/**"/>
            <include name="mastodon/**"/>            
        </javac>
    </target>

    <target name="build" depends="compile" description="generate the jar file">
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}"/>

        <!-- Put everything in ${build} into the mastodon.jar file -->
        <jar jarfile="${dist}/mastodon.jar">
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Main-Class" value="mastodon.MastodonApp"/>
            </manifest>
            <fileset dir="${build}">
                <include name="figtree/**/*.class"/>
                <include name="mastodon/**/*.class"/>
            </fileset>
        <!--    <fileset dir="">
                <include name="images/*.png"/>
            	<include name="images/*.gif"/>
            </fileset> -->
            <fileset dir="${src}">
                <include name="mastodon/images/*.png"/>
            	<include name="mastodon/images/*.gif"/>
            </fileset>
            <zipgroupfileset dir="${lib}" includes="**/*.jar"/>
        </jar>
    </target>

    <property name="version" value="0.3" />
    <property name="release_dir" value="release" />
    <property name="name" value="MASTodon" />

    <property name="common_dir" value="${release_dir}/common" />

    <property name="Mac_dir" value="${release_dir}/Mac" />
    <property name="Linux_dir" value="${release_dir}/Linux" />
    <property name="Windows_dir" value="${release_dir}/Windows" />

    <property name="Mac_package_dir" value="${Mac_dir}/${name} v${version}" />
    <property name="Linux_package_dir" value="${Linux_dir}/${name}_v${version}" />
    <property name="Windows_package_dir" value="${Windows_dir}/${name} v${version}" />

    <!-- Need to either install Launch4j under {BEAST workspace}/${release}
                 or install it in the default directory and change the location of launch4j.dir -->
    <target name="windows" depends="build" description="release Windows version of mastodon">

        <delete dir="${Windows_package_dir}" />
        <!-- Create the release directory -->
        <mkdir dir="${Windows_package_dir}" />

        <property name="launch4j.dir" location="${Windows_dir}/launch4j" />
        <taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask"
            classpath="${launch4j.dir}/launch4j.jar :${launch4j.dir}/lib/xstream.jar" />

        <copy file="${dist}/mastodon.jar" todir="${Windows_package_dir}/lib"/>
        <copy todir="${Windows_package_dir}/lib">
            <fileset dir="${Windows_dir}/lib"/>
        </copy>
        <copy file="${common_dir}/README.txt" todir="${Windows_package_dir}"/>

        <launch4j configFile="${Windows_dir}/mastodon_launch4j.xml"
                  jar="${dist}/mastodon.jar"
                  outfile="${Windows_package_dir}/${name} v${version}.exe"
                  fileVersion="${version}.0.0"
                  txtFileVersion="${version}"
                  productVersion="${version}.0.0"
        	txtProductVersion="${version}"/>

        <zip destfile="${release_dir}/${name} v${version}.zip">
            <zipfileset dir="${Windows_package_dir}" prefix="${name} v${version}"/>
        </zip>

        <echo message="Windows version release is finished." />
    </target>

    <target name="linux" depends="build" description="release Linux/Unix version of mastodon">
        <delete dir="${Linux_package_dir}" />
        <!-- Create the release directory -->
        <mkdir dir="${Linux_package_dir}" />

        <copy todir="${Linux_package_dir}/bin">
            <fileset dir="${Linux_dir}/scripts"/>
        </copy>

        <copy file="${Linux_dir}/icons/mastodon.png" todir="${Linux_package_dir}/images"/>
        <copy file="${dist}/mastodon.jar" todir="${Linux_package_dir}/lib"/>
        <copy todir="${Linux_package_dir}/lib">
            <fileset dir="${Linux_dir}/lib"/>
        </copy>
        <copy file="${common_dir}/README.txt" todir="${Linux_package_dir}"/>

        <tar destfile="${release_dir}/${name}_v${version}.tgz" compression="gzip">
            <tarfileset dir="${Linux_package_dir}" prefix="${name}_v${version}"/>
        </tar>

        <echo message="Linux/Unix version release is finished." />
    </target>

    <target name="mac" depends="build" description="release Mac version of mastodon">
        <delete dir="${Mac_package_dir}" />
        <!-- Create the release directory -->
        <mkdir dir="${Mac_package_dir}" />

        <copy file="${common_dir}/README.txt" todir="${Mac_package_dir}"/>

        <!-- <taskdef name="jarbundler" classname="net.sourceforge.jarbundler.JarBundler"/> -->
    	<taskdef name="jarbundler" classname="net.sourceforge.jarbundler.JarBundler" 
    					classpath="${Mac_dir}/jarbundler-2.2.0.jar"/>

        <!-- create a jar bundle for the mac -->
        <jarbundler dir="${Mac_package_dir}"
                        name="${name} v${version}"
                        mainclass="mastodon.MastodonApp"
                        icon="${Mac_dir}/icons/mastodon.icns"
                        jvmversion="1.6+"
                        arguments=""
                        version="${version}"
                        infostring="${name} v${version}, Copyright 2012, Justs Zarins"
                        bundleid="mastodon" >
            <javaproperty name="apple.laf.useScreenMenuBar" value="true"/>
            <jarfileset dir="${dist}">
                <include name="**/mastodon.jar"/>
            </jarfileset>
            <jarfileset dir="${Mac_dir}/lib">
                <include name="**/*.jar"/>
            	<include name="**/*.jnilib"/>
            </jarfileset>
        </jarbundler>

        <echo message="Building disk image." />

        <!-- create disk image -->
        <exec executable="/usr/bin/hdiutil">
            <arg value="create"/>
            <arg value="-ov"/>
            <arg value="-srcfolder"/>
            <arg value="${Mac_package_dir}"/>
            <arg value="-volname"/>
            <arg value="${name} v${version}"/>
            <arg value="-imagekey"/>
            <arg value="zlib-level=6"/>
            <arg value="${release_dir}/${name} v${version}.dmg"/>
        </exec>

        <echo message="Mac version release is finished." />
    </target>
</project>